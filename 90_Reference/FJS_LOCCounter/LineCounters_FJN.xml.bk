<?xml version="1.0" encoding="utf-8" ?>
<lineCounters version="1.0.0.5">
  <!--
	lineCounter Attributes:
		name="[userReadableName]" - the name of the counter type which will be displayed in the counter results
	
	lineCounters can contain any number of fileExtension and/or codeArea elements
	
	fileExtension Value:
		this a file extension for which the counter is valid
		
	codeArea Attributes:
		name="[userReadableName]" - the name of the code area which will be displayed in the counter results. It is often appeneded to the lineCounter name for display. This is a required attribute
		isCode="[true|false]" - true if code that matches this codeArea is considered for the Total Lines of Code count. Default is false
		multiLine="[true|false]" - true if the code area spans more than one line. Default is false
		caseSensitive="[true|false]" - true if the expressions are to be matched in a case sensitive manner. Default is true
		description="[user readable description]"
		
	multi line codeAreas must contain a startExpression element and an endExpression element
	single line codeAreas can contain any number of expression elements
	
	by default, all lines are considered Lines of Code unless otherwise matched
	-->
	
<!-- Toan-NT        Add counter for JAVA -->
	<lineCounter name="Java">
		<fileExtension>java</fileExtension>
		<codeArea name="Autogenerated code" isCode="false" multiLine="true">
			<startExpression>^\s*//Start Autogenerated code.*$</startExpression>
			<endExpression>^\s*//End Autogenerated code.*$</endExpression>
		</codeArea>
		<codeArea name="Blank lines" isCode="false">
			<expression>^\s*$</expression>
		</codeArea>
		<codeArea name="// comments" isCode="false">
			<expression>^\s*//.*$</expression>
		</codeArea>
		<codeArea name="/* */ comments" multiLine="true">
			<startExpression>^\s*/\*.*$</startExpression>
			<endExpression>[*]*\*/</endExpression>
		</codeArea>
	</lineCounter>
	
<!-- Cuong-TQ          Add counter for PHP -->
	<lineCounter name="PHP">
		<fileExtension>php</fileExtension>		
  	<codeArea name="// comments" isCode="false">
			<expression>^\s*//.*$</expression>
		</codeArea>
		<codeArea name="brackets { , }" isCode="false">
			<expression>^\s*[{}]\s*$</expression>
		</codeArea>
		<codeArea name="Blank lines" isCode="false">
			<expression>^\s*$</expression>
		</codeArea>	
		<codeArea name="/* */ comments" multiLine="true">
			<startExpression>^\s*/\*.*$</startExpression>
			<endExpression>[*]*\*/</endExpression>
		</codeArea>
	</lineCounter>
  <lineCounter name="C#">
    <fileExtension>cs</fileExtension>
    <codeArea name="Autogenerated Windows form code" isCode="false" multiLine="true">
      <startExpression>^\s*\#region Windows Form Designer generated code\s*$</startExpression>
      <endExpression>^\s*\#endregion\b\s*.*$</endExpression>
    </codeArea>
    <codeArea name="Autogenerated Web form code" isCode="false" multiLine="true">
      <startExpression>^\s*\#region Web Form Designer generated code\s*$</startExpression>
      <endExpression>^\s*\#endregion\b\s*.*$</endExpression>
    </codeArea>
    <codeArea name="Autogenerated Component designer code" isCode="false" multiLine="true">
      <startExpression>^\s*\#region Component Designer generated code\s*$</startExpression>
      <endExpression>^\s*\#endregion\b\s*.*$</endExpression>
    </codeArea>
    <codeArea name="Blank lines" isCode="false">
      <expression>^\s*$</expression>
    </codeArea>
    <codeArea name="// comments" isCode="false">
      <expression>^\s*//.*$</expression>
    </codeArea>
    <codeArea name="/* */ comments" multiLine="true">
      <startExpression>^\s*/\*.*$</startExpression>
      <endExpression>[*]*\*/</endExpression>
    </codeArea>
    <pspMetricArea name="Class" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>//(\W)*PSP_METRICS_CLASS_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>//(\W)*PSP_METRICS_CLASS_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_CLASS_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>
    <pspMetricArea name="Method" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>//(\W)*PSP_METRICS_METHOD_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>//(\W)*PSP_METRICS_METHOD_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_METHOD_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>
  </lineCounter>
  <lineCounter name="VB.NET">
    <fileExtension>vb</fileExtension>
    <fileExtension>vbs</fileExtension>
    <codeArea name="Imports statements" isCode="true">
      <expression>^\s*Imports.*$</expression>
    </codeArea>
    <codeArea name="Blank lines" isCode="false">
      <expression>^\s*$</expression>
    </codeArea>
    <codeArea name="' comments" isCode="false">
      <expression>^\s*'.*$</expression>
    </codeArea>
    <pspMetricArea name="Class" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>'(\W)*PSP_METRICS_CLASS_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>'(\W)*PSP_METRICS_CLASS_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_CLASS_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>
    <pspMetricArea name="Method" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>'(\W)*PSP_METRICS_METHOD_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>'(\W)*PSP_METRICS_METHOD_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_METHOD_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>
  </lineCounter>
  
<!-- Huan-dd 2009/08/21 Add counter for VB -->
  <lineCounter name="VB">
		<fileExtension>frm</fileExtension>
		<fileExtension>bas</fileExtension>
		<fileExtension>ctl</fileExtension>
		<fileExtension>cls</fileExtension>
		<codeArea name="Blank lines" isCode="false">
			<expression>^\s*$</expression>
		</codeArea>
		<codeArea name="' comments" isCode="false">
			<expression>^\s*'.*$</expression>
		</codeArea>
		<codeArea name="Attribute statements" isCode="false">
			<expression>^\s*Attribute.*$</expression>
		</codeArea>
		<codeArea name="VERSION statements" isCode="false">
			<expression>^\s*VERSION.*$</expression>
		</codeArea>
		<codeArea name="Object statements" isCode="false">
			<expression>^\s*Object.*$</expression>
		</codeArea>
		<codeArea name="Begin/End for Layout" isCode="false" multiLine="true">
			<startExpression>^\s*Begin VB.Form.*$</startExpression>
			<endExpression>^\s*Attribute.*$</endExpression>
		</codeArea>
	</lineCounter>
  <lineCounter name="C++">
    <fileExtension>cpp</fileExtension>
    <fileExtension>h</fileExtension>
    <fileExtension>idl</fileExtension>
    <fileExtension>def</fileExtension>
    <codeArea name="Include statements" isCode="true">
      <expression>^\s*#\s*include.*$</expression>
    </codeArea>
    <codeArea name="Blank lines" isCode="false">
      <expression>^\s*$</expression>
    </codeArea>
    <codeArea name="// comments" isCode="false">
      <expression>^\s*//.*$</expression>
    </codeArea>
    <codeArea name="/* */ comments" multiLine="true">
      <startExpression>^\s*/\*.*$</startExpression>
      <endExpression>[*]*\*/</endExpression>
    </codeArea>
    <pspMetricArea name="Class" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>//(\W)*PSP_METRICS_CLASS_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>//(\W)*PSP_METRICS_CLASS_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_CLASS_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>
    <pspMetricArea name="Method" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>//(\W)*PSP_METRICS_METHOD_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>//(\W)*PSP_METRICS_METHOD_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_METHOD_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>
  </lineCounter>
  <lineCounter name="SQL">
    <fileExtension>sql</fileExtension>
    <fileExtension>sp</fileExtension>
    <fileExtension>1sp</fileExtension>
    <fileExtension>2sp</fileExtension>
    <fileExtension>3sp</fileExtension>
    <fileExtension>dat</fileExtension>
    <fileExtension>alt</fileExtension>
    <fileExtension>idx</fileExtension>
    <fileExtension>tbl</fileExtension>
    <fileExtension>fn</fileExtension>
    <fileExtension>vew</fileExtension>
    <codeArea name="Begin/End tags" isCode="false" caseSensitive="false">
      <expression>^\s*begin\s*$</expression>
      <expression>^\s*end\s*$</expression>
    </codeArea>
    <codeArea name="Comments" isCode="false">
      <expression>^\s*--.*$</expression>
    </codeArea>
    <codeArea name="Blank lines" isCode="false">
      <expression>^\s*$</expression>
    </codeArea>
    <codeArea name="/* */ comments" multiLine="true">
      <startExpression>^\s*/\*.*$</startExpression>
      <endExpression>[*]*\*/</endExpression>
    </codeArea>
    <pspMetricArea name="Procedure" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>--(\W)*PSP_METRICS_PROCEDURE_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>--(\W)*PSP_METRICS_PROCEDURE_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_PROCEDURE_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>

  </lineCounter>
  <lineCounter name="Xml files">
    <fileExtension>xml</fileExtension>
    <fileExtension>xsl</fileExtension>
    <fileExtension>xsd</fileExtension>
    <codeArea name="Blank lines" isCode="false">
      <expression>^\s*$</expression>
    </codeArea>
    <codeArea name="&lt;!--  --&gt; comments" isCode="false" multiLine="true">
      <startExpression>^\s*&lt;!--.*$</startExpression>
      <endExpression>[*]*--&gt;</endExpression>
    </codeArea>
    <pspMetricArea name="Funtion" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>&lt;!--PSP_METRICS_FUNCTION_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>&lt;!--PSP_METRICS_FUNCTION_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_FUNCTION_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>

  </lineCounter>
  <lineCounter name="Web files">
    <fileExtension>aspx</fileExtension>
    <fileExtension>ascx</fileExtension>
    <fileExtension>css</fileExtension>
    <fileExtension>htm</fileExtension>
    <fileExtension>html</fileExtension>
    <fileExtension>asp</fileExtension>
    <fileExtension>js</fileExtension>
    <codeArea name="Blank lines" isCode="false">
      <expression>^\s*$</expression>
    </codeArea>
    <codeArea name="// comments" isCode="false">
      <expression>^\s*//.*$</expression>
    </codeArea>
    <codeArea name="/* */ comments" multiLine="true">
      <startExpression>^\s*/\*.*$</startExpression>
      <endExpression>[*]*\*/</endExpression>
    </codeArea>
    <codeArea name="&lt;!--  --> comments" multiLine="true">
      <startExpression>^\s*&lt;!--.*$</startExpression>
      <endExpression>[*]*--></endExpression>
    </codeArea>
    <pspMetricArea name="Function" toCount="true" caseSensitive="false" >
      <pspMetricAreaStartFlag>&lt;!--PSP_METRICS_FUNCTION_BEGIN</pspMetricAreaStartFlag>
      <pspMetricAreaEndFlag>&lt;!--PSP_METRICS_FUNCTION_END</pspMetricAreaEndFlag>
      <PspMetricNameFlag>(?&lt;=PSP_METRICS_FUNCTION_BEGIN(\W)*:(\W)*)(\w)*</PspMetricNameFlag>
      <ObjectType>(?&lt;=&lt;Object_Type&gt;(\W)*:(\W)*)(\w)*</ObjectType>
    </pspMetricArea>

  </lineCounter>
</lineCounters>
